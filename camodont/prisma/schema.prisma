// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EstadoCita {
  PENDIENTE
  CANCELADO
  REALIZADO
}
enum EstadoCampana {
  ACTIVO
  INACTIVO
}



model Campana {
  id     Int       @id @default(autoincrement())
  nombre String
  fechaInicio DateTime
  fechaFin DateTime
  estado EstadoCampana
  numeroVacantes Int
  PeriodoAcademico PeriodoAcademico @relation(fields: [idPeriodoAcademico], references: [id])
  idPeriodoAcademico Int
  Cita Cita[]
  Servicio Servicio[]
  EstudianteOnCampana EstudianteOnCampana[]
  PacienteOnCampana PacienteOnCampana[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cita {
  id     Int       @id @default(autoincrement())
  fecha  DateTime
  hora   DateTime
  lugar  String
  estado EstadoCita
  Campana Campana @relation(fields: [idCampana], references: [id])
  idCampana Int
  Servicio Servicio @relation(fields: [idServicio], references: [id])
  idServicio Int @unique
  Estudiante Estudiante @relation(fields: [idEstudiante], references: [id])
  idEstudiante Int
  Paciente Paciente @relation(fields: [idPaciente], references: [id])
  idPaciente Int
  Tratamiento Tratamiento @relation(fields: [idTratamiento], references: [id])
  idTratamiento Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Servicio {
  id     Int       @id @default(autoincrement())
  nombre String
  descripcion String?
  duracion Int
  Campana Campana @relation(fields: [idCampana], references: [id])
  idCampana Int
  Cita Cita?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PeriodoAcademico {
  id     Int       @id @default(autoincrement())
  fechaInicio DateTime
  fechaFin DateTime
  Campana Campana[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Estudiante {
  id     Int       @id @default(autoincrement())
  nombre String
  apellido String
  correoInstitucional String
  telefono String
  foto String
  cicloAcademico String
  EstudianteOnCampana EstudianteOnCampana[]
  Cita Cita[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EstudianteOnCampana {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Estudiante Estudiante @relation(fields: [idEstudiante], references: [id])
  idEstudiante Int
  Campana Campana @relation(fields: [idCampana], references: [id])
  idCampana Int
  @@id([idEstudiante, idCampana])
}

model Paciente {
  id     Int       @id @default(autoincrement())
  nombre String
  apellido String
  correo String
  telefono String
  direccion String?
  Cita Cita[]
  PacienteOnCampana PacienteOnCampana[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PacienteOnCampana {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Paciente Paciente @relation(fields: [idPaciente], references: [id])
  idPaciente Int
  Campana Campana @relation(fields: [idCampana], references: [id])
  idCampana Int
  @@id([idPaciente, idCampana])
}

model Tratamiento {
  id     Int       @id @default(autoincrement())
  descripcion String
  fecha DateTime
  duracion Int
  Cita Cita[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

